// 아래 기본 제공된 코드를 수정 또는 삭제하고 본인이 코드를 사용하셔도 됩니다.
#include <cstdio>
#include <iostream>
#include <vector>
using namespace std;

int vt[1000000];

int main(int argc, char** argv) {
	/* 아래 freopen 함수는 input.txt 를 read only 형식으로 연 후,
	   앞으로 표준 입력(키보드) 대신 input.txt 파일로 부터 읽어오겠다는 의미의 코드입니다.
	   만약 본인의 PC 에서 테스트 할 때는, 입력값을 input.txt에 저장한 후 freopen 함수를 사용하면,
	   그 아래에서 scanf 함수 또는 cin을 사용하여 표준입력 대신 input.txt 파일로 부터 입력값을 읽어 올 수 있습니다.
	   또한, 본인 PC에서 freopen 함수를 사용하지 않고 표준입력을 사용하여 테스트하셔도 무방합니다.
	   단, Codeground 시스템에서 "제출하기" 할 때에는 반드시 freopen 함수를 지우거나 주석(//) 처리 하셔야 합니다. */
	//freopen("input.txt", "r", stdin);

	setbuf(stdout, NULL);

	int TC;
	int test_case;
    
	scanf("%d", &TC);	// cin 사용 가능
	for(test_case = 1; test_case <= TC; test_case++) {
		// 이 부분에서 알고리즘 프로그램을 작성하십시오.
        int N;
        cin >> N;
        
       
        
        // 돌다리의 좌표가 입력됨.
        for(int i = 0; i < N; i++) {
            cin >> vt[i];            
        }
        
        int K;
        cin >> K;
        
        bool canJump = false;    // 점프를 할 수 있는지?
        
        int cur = 0;    // 현재 좌표
        int ret = 0;
        for(int i = 0; i < N; i++) {
            cout << i << endl;
            int length = vt[i] - cur;    // 현재 좌표로부터 떨어진 거리
            //cout << "length : " << length <<  endl;
            if( length > K )
            {    // 도달 불가능한 경우
                if( canJump )
                {    // 이전에 점프가 가능했다면
                    ret++;
                    canJump = false;    // 초기화
                    cur = vt[i-1];    // 현재 위치 수정
                    i--;    // 반복문 위치 수정
                }
                else
                {
                    ret = -1;
                    break;
                }
            }
            else canJump = true;
        }
        /*
        // queue 로 풀 수 있다.
        // k보다 
        
        for(int i = 0; i < N; i++) {
            // length와 k를 비교해서 가장 먼 곳으로 이동한다.
            length = A[i] - cur;
            if(length < k) continue;
        }
        */
        ret = (ret != -1) ? ret+1 : ret ;
        
        
		// 이 부분에서 정답을 출력하십시오.
		printf("Case #%d\n", test_case);	// cout 사용 가능
        printf("%d\n", ret);	// cout 사용 가능
        
	}

	return 0;	// 정상종료 시 반드시 0을 리턴해야 합니다.
}
